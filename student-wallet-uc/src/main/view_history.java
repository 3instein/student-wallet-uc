/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;
    import java.awt.event.KeyEvent;
    import java.sql.Connection;
    import java.sql.ResultSet;
    import java.sql.Statement;
    import java.text.DecimalFormat;
    import java.text.DecimalFormatSymbols;
    import javax.swing.*;
    import javax.swing.table.DefaultTableModel;
/**
 *
 * @author reyna
 */
public class view_history extends javax.swing.JFrame {
    int user_id;
    int page = 0;
    float totalpage = 0;
    int offset = page * 10;
    Connection conn;
    Statement stmt;
    ResultSet rs;
    String sql;
   
    DefaultTableModel model;
    
    /**
     * Creates new form view_history
     */
    public view_history() {
        initComponents();
        init();
        connection DB = new connection();
        DB.config();
        conn = DB.conn;
        stmt = DB.stmt;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        display = new javax.swing.JTable();
        previous = new javax.swing.JButton();
        next = new javax.swing.JButton();
        student_number = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        back1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(787, 452));
        getContentPane().setLayout(null);

        jPanel4.setBackground(new java.awt.Color(251, 211, 176));
        jPanel4.setLayout(null);

        display.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}
    );
    jScrollPane3.setViewportView(display);

    jPanel4.add(jScrollPane3);
    jScrollPane3.setBounds(10, 11, 749, 159);

    previous.setBackground(new java.awt.Color(64, 191, 64));
    previous.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    previous.setText("Previous Page");
    previous.setBorderPainted(false);
    previous.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            previousActionPerformed(evt);
        }
    });
    jPanel4.add(previous);
    previous.setBounds(60, 250, 120, 35);

    next.setBackground(new java.awt.Color(64, 191, 64));
    next.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    next.setText("Next Page");
    next.setBorderPainted(false);
    next.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            nextActionPerformed(evt);
        }
    });
    jPanel4.add(next);
    next.setBounds(600, 250, 119, 35);

    student_number.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            student_numberActionPerformed(evt);
        }
    });
    student_number.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            student_numberKeyPressed(evt);
        }
    });
    jPanel4.add(student_number);
    student_number.setBounds(330, 210, 135, 35);

    jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel2.setText("Student Number");
    jPanel4.add(jLabel2);
    jLabel2.setBounds(340, 190, 130, 15);

    search.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchActionPerformed(evt);
        }
    });
    search.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            searchKeyPressed(evt);
        }
    });
    jPanel4.add(search);
    search.setBounds(330, 310, 135, 35);

    jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel3.setText("Search by Date ( ex : Apr 1 )");
    jPanel4.add(jLabel3);
    jLabel3.setBounds(310, 290, 175, 15);

    getContentPane().add(jPanel4);
    jPanel4.setBounds(0, 60, 770, 370);

    jPanel5.setBackground(new java.awt.Color(255, 255, 255));

    back1.setBackground(new java.awt.Color(255, 255, 255));
    back1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    back1.setText("<- Back");
    back1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
    back1.setContentAreaFilled(false);
    back1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    back1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            back1ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addGap(23, 23, 23)
            .addComponent(back1)
            .addContainerGap(696, Short.MAX_VALUE))
    );
    jPanel5Layout.setVerticalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addGap(15, 15, 15)
            .addComponent(back1)
            .addContainerGap(26, Short.MAX_VALUE))
    );

    getContentPane().add(jPanel5);
    jPanel5.setBounds(0, 0, 770, 60);

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionPerformed
        init();
        if (page == 0) {
            JOptionPane.showMessageDialog(this, "This is the first page!");
            return;
        } else {
            for (int i = display.getRowCount() - 1; i >= 0; i--) {
                model.removeRow(i);
            }
            page--;
        }
        offset = page * 10;

        sql = "SELECT * FROM history WHERE user_id=" + user_id + " ORDER BY transaction_id DESC LIMIT 10 OFFSET " + offset + ";";
        try {
            DecimalFormat rp = (DecimalFormat) DecimalFormat.getCurrencyInstance();
            DecimalFormatSymbols formatRp = new DecimalFormatSymbols();

            formatRp.setCurrencySymbol("Rp. ");
            formatRp.setMonetaryDecimalSeparator(',');
            formatRp.setGroupingSeparator('.');

            rp.setDecimalFormatSymbols(formatRp);

            rs = stmt.executeQuery(sql);
            while (rs.next()) {
                int transaction_id = rs.getInt("transaction_id");
                String type = rs.getString("type");
                int amount = rs.getInt("amount");
                String date = rs.getString("date");
                model.addRow(new Object[]{transaction_id, type, rp.format(amount), date});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    
    public void init(){
        model = (DefaultTableModel) display.getModel();
        Object[] newIdentifiers = new Object[]{"Transaction ID", "Type", "Amount", "Date"};
        model.setColumnIdentifiers(newIdentifiers);
    }//GEN-LAST:event_previousActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        init();

        if(page < totalpage){
            page++;
            for(int i = display.getRowCount() - 1; i >= 0; i--){
                model.removeRow(i);
            }
        } else {
            JOptionPane.showMessageDialog(this, "This is the last page!");
            return;
        }
        offset = page * 10;

        sql = "SELECT * FROM history WHERE user_id=" + user_id + " ORDER BY transaction_id DESC LIMIT 10 OFFSET " + offset + ";";
        try{
            DecimalFormat rp = (DecimalFormat) DecimalFormat.getCurrencyInstance();
            DecimalFormatSymbols formatRp = new DecimalFormatSymbols();

            formatRp.setCurrencySymbol("Rp. ");
            formatRp.setMonetaryDecimalSeparator(',');
            formatRp.setGroupingSeparator('.');

            rp.setDecimalFormatSymbols(formatRp);

            rs = stmt.executeQuery(sql);
            while(rs.next()){
                int transaction_id = rs.getInt("transaction_id");
                String type = rs.getString("type");
                int amount = rs.getInt("amount");
                String date = rs.getString("date");
                model.addRow(new Object[]{transaction_id, type, rp.format(amount), date});
            }
        } catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_nextActionPerformed

    private void student_numberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_student_numberKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            init();
            String target = student_number.getText();
            if(target.isBlank()){
                JOptionPane.showMessageDialog(this, "Student number must be filled");
                return;
            }
            DecimalFormat rp = (DecimalFormat) DecimalFormat.getCurrencyInstance();
            DecimalFormatSymbols formatRp = new DecimalFormatSymbols();

            formatRp.setCurrencySymbol("Rp. ");
            formatRp.setMonetaryDecimalSeparator(',');
            formatRp.setGroupingSeparator('.');

            rp.setDecimalFormatSymbols(formatRp);

            sql = "SELECT user_id FROM user WHERE nim='" + target + "';";
            try{
                rs = stmt.executeQuery(sql);
                if(rs.next()){
                    user_id = rs.getInt("user_id");
                } else {
                    JOptionPane.showMessageDialog(this, "There is no user associated with student number " + target);
                    return;
                }
                sql = "SELECT * FROM history WHERE user_id=" + user_id + " ORDER BY transaction_id DESC LIMIT 10;";
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    int transaction_id = rs.getInt("transaction_id");
                    String type = rs.getString("type");
                    int amount = rs.getInt("amount");
                    String date = rs.getString("date");
                    model.addRow(new Object[]{transaction_id, type, rp.format(amount), date});
                }
                sql = "SELECT count(*) FROM history WHERE user_id=" + user_id + ";";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    totalpage = rs.getInt("count(*)");
                    totalpage = (float) Math.ceil(totalpage / 10) - 1;
                }
            } catch(Exception e){
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
            
        }
    }//GEN-LAST:event_student_numberKeyPressed

    private void back1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back1ActionPerformed
        new adminMenu().setVisible(true);
        dispose();
    }//GEN-LAST:event_back1ActionPerformed

    private void searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            init();
            String date = search.getText();
            for(int i = display.getRowCount() - 1; i >= 0; i--){
                model.removeRow(i);
            }
            
            DecimalFormat rp = (DecimalFormat) DecimalFormat.getCurrencyInstance();
            DecimalFormatSymbols formatRp = new DecimalFormatSymbols();

            formatRp.setCurrencySymbol("Rp. ");
            formatRp.setMonetaryDecimalSeparator(',');
            formatRp.setGroupingSeparator('.');

            rp.setDecimalFormatSymbols(formatRp);
            
            sql = "SELECT * FROM history WHERE date LIKE '%" + date + "%' AND user_id=" + user_id + ";";
            try{
                rs = stmt.executeQuery(sql);
                while(rs.next()){
                    int transaction_id = rs.getInt("transaction_id");
                    String type = rs.getString("type");
                    int amount = rs.getInt("amount");
                    date = rs.getString("date");
                    model.addRow(new Object[]{transaction_id, type, rp.format(amount), date});
                }
            } catch(Exception e){
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_searchKeyPressed

    private void student_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_student_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_student_numberActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(view_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(view_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(view_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(view_history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back1;
    private javax.swing.JTable display;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton next;
    private javax.swing.JButton previous;
    private javax.swing.JTextField search;
    private javax.swing.JTextField student_number;
    // End of variables declaration//GEN-END:variables
}
