/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;
import java.awt.event.KeyEvent;
    import java.sql.Connection;
    import java.sql.ResultSet;
    import java.sql.Statement;
    import java.text.DecimalFormat;
    import java.text.DecimalFormatSymbols;
    import javax.swing.*;
    import javax.swing.table.DefaultTableModel;
/**
 *
 * @author reyna
 */
public class view_finance extends javax.swing.JFrame {
    int user_id;
    int payment_id;
    int amount;
    int balance;
    int page = 0;
    float totalpage = 0;
    int offset = page * 5;
    Connection conn;
    Statement stmt;
    ResultSet rs;
    String sql;
    
    DefaultTableModel model;
    int selected = -1;
    String status;
    /**
     * Creates new form view_finance
     */
    public view_finance() {
        initComponents();
        init();
        connection DB = new connection();
        DB.config();
        conn = DB.conn;
        stmt = DB.stmt;
    }
    
    public void init(){
        model = (DefaultTableModel) display.getModel();
        Object[] newIdentifiers = new Object[]{"Payment ID", "Amount", "Date", "Status"};
        model.setColumnIdentifiers(newIdentifiers);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        previous = new javax.swing.JButton();
        next = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        display = new javax.swing.JTable();
        change = new javax.swing.JButton();
        student_number = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(787, 452));
        getContentPane().setLayout(null);

        jPanel4.setBackground(new java.awt.Color(251, 211, 176));

        previous.setBackground(new java.awt.Color(64, 191, 64));
        previous.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        previous.setText("Previous Page");
        previous.setBorderPainted(false);
        previous.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousActionPerformed(evt);
            }
        });

        next.setBackground(new java.awt.Color(64, 191, 64));
        next.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        next.setText("Next Page");
        next.setBorderPainted(false);
        next.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        display.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}
    );
    display.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            displayMouseClicked(evt);
        }
    });
    jScrollPane3.setViewportView(display);

    change.setBackground(new java.awt.Color(244, 129, 30));
    change.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    change.setText("Change");
    change.setBorder(null);
    change.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    change.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            changeActionPerformed(evt);
        }
    });

    student_number.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            student_numberActionPerformed(evt);
        }
    });
    student_number.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            student_numberKeyPressed(evt);
        }
    });

    jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel2.setText("Student Number");

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addGap(20, 20, 20)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addGap(75, 75, 75)
            .addComponent(previous)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(145, 145, 145)
                    .addComponent(student_number, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(169, 169, 169)
                    .addComponent(change, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(next)
            .addGap(75, 75, 75))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
            .addGap(352, 352, 352)
            .addComponent(jLabel2)
            .addGap(341, 341, 341))
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addGap(30, 30, 30)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(50, 50, 50)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(previous, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(student_number, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(change, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(13, Short.MAX_VALUE))
    );

    getContentPane().add(jPanel4);
    jPanel4.setBounds(0, 60, 790, 350);

    jPanel3.setBackground(new java.awt.Color(255, 255, 255));

    back.setBackground(new java.awt.Color(255, 255, 255));
    back.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    back.setText("<- Back");
    back.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
    back.setContentAreaFilled(false);
    back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    back.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            backActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addGap(23, 23, 23)
            .addComponent(back)
            .addContainerGap(708, Short.MAX_VALUE))
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addGap(15, 15, 15)
            .addComponent(back)
            .addContainerGap(24, Short.MAX_VALUE))
    );

    getContentPane().add(jPanel3);
    jPanel3.setBounds(0, 0, 790, 60);

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionPerformed
        init();
        if(page == 0){
            JOptionPane.showMessageDialog(this, "This is the first page!");
            return;
        } else {
            for(int i = display.getRowCount() - 1; i >= 0; i--){
            model.removeRow(i);
            }
            page--;
        }
        offset = page * 10;
        
        sql = "SELECT * FROM payment WHERE user_id=" + user_id + " ORDER BY payment_id DESC LIMIT 10 OFFSET " + offset + ";";
        try{
            DecimalFormat rp = (DecimalFormat) DecimalFormat.getCurrencyInstance();
            DecimalFormatSymbols formatRp = new DecimalFormatSymbols();

            formatRp.setCurrencySymbol("Rp. ");
            formatRp.setMonetaryDecimalSeparator(',');
            formatRp.setGroupingSeparator('.');

            rp.setDecimalFormatSymbols(formatRp);
            
            rs = stmt.executeQuery(sql);
            while(rs.next()){
                int payment_id = rs.getInt("payment_id");
                int amount = rs.getInt("amount");
                String date = rs.getString("date");
                String status = rs.getString("status");
                model.addRow(new Object[]{payment_id, rp.format(amount), date, status});
            }
        } catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_previousActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        init();
        
        if(page < totalpage){
            page++;
            for(int i = display.getRowCount() - 1; i >= 0; i--){
                model.removeRow(i);
            }
        } else {
            JOptionPane.showMessageDialog(this, "This is the last page!");
            return;
        }
        offset = page * 10;


        sql = "SELECT * FROM payment WHERE user_id=" + user_id + " ORDER BY payment_id DESC LIMIT 10 OFFSET " + offset + ";";
        try{
            DecimalFormat rp = (DecimalFormat) DecimalFormat.getCurrencyInstance();
            DecimalFormatSymbols formatRp = new DecimalFormatSymbols();

            formatRp.setCurrencySymbol("Rp. ");
            formatRp.setMonetaryDecimalSeparator(',');
            formatRp.setGroupingSeparator('.');

            rp.setDecimalFormatSymbols(formatRp);
            
            rs = stmt.executeQuery(sql);
            while(rs.next()){
                payment_id = rs.getInt("payment_id");
                amount = rs.getInt("amount");
                String date = rs.getString("date");
                String status = rs.getString("status");
                model.addRow(new Object[]{payment_id, rp.format(amount), date, status});
            }
        } catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_nextActionPerformed

    private void displayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayMouseClicked
        selected = display.getSelectedRow();
        payment_id = (int) display.getValueAt(selected, 0);
        status = (String) display.getValueAt(selected, 3);
    }//GEN-LAST:event_displayMouseClicked

    private void changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeActionPerformed
        if(selected == -1){
            JOptionPane.showMessageDialog(this, "Select a payment first!");
            return;
        }
        sql = "SELECT status FROM payment WHERE payment_id=" + payment_id + ";";
        try{
            rs = stmt.executeQuery(sql);
            if(rs.next()){
                status = rs.getString("status");
                if(status.equals("Paid")){
                    status = "Unpaid";
                    model.setValueAt(status, selected, 3);
                    sql = "UPDATE payment SET status='" + status + "' WHERE payment_id=" + payment_id + ";";
                    stmt.execute(sql);
                    JOptionPane.showMessageDialog(this, "Payment status changed");
                } else {
                    status = "Paid";
                    model.setValueAt(status, selected, 3);
                    sql = "UPDATE payment SET status='" + status + "' WHERE payment_id=" + payment_id + ";";
                    stmt.execute(sql);
                    JOptionPane.showMessageDialog(this, "Payment status changed");
                }
            }
        } catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_changeActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        new adminMenu().setVisible(true);
        dispose();
    }//GEN-LAST:event_backActionPerformed

    private void student_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_student_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_student_numberActionPerformed

    private void student_numberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_student_numberKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String target = student_number.getText();
            if(target.isBlank()){
                JOptionPane.showMessageDialog(this, "Student number must be filled");
                return;
            }
            DecimalFormat rp = (DecimalFormat) DecimalFormat.getCurrencyInstance();
            DecimalFormatSymbols formatRp = new DecimalFormatSymbols();

            formatRp.setCurrencySymbol("Rp. ");
            formatRp.setMonetaryDecimalSeparator(',');
            formatRp.setGroupingSeparator('.');

            rp.setDecimalFormatSymbols(formatRp);

            sql = "SELECT user_id FROM user WHERE nim='" + target + "';";
            try{
                rs = stmt.executeQuery(sql);
                if(rs.next()){
                    user_id = rs.getInt("user_id");
                } else {
                    JOptionPane.showMessageDialog(this, "There is no user associated with student number " + target);
                    return;
                }
                sql = "SELECT * FROM payment WHERE user_id=" + user_id + " ORDER BY payment_id DESC LIMIT 10;";
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    int payment_id = rs.getInt("payment_id");
                    int amount = rs.getInt("amount");
                    String date = rs.getString("date");
                    String status = rs.getString("status");
                    model.addRow(new Object[]{payment_id, rp.format(amount), date, status});
                }
                sql = "SELECT count(*) FROM payment WHERE user_id=" + user_id + ";";
                rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    totalpage = rs.getInt("count(*)");
                    totalpage = (float) Math.ceil(totalpage / 10) - 1;
                }
            } catch(Exception e){
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

        }
    }//GEN-LAST:event_student_numberKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(view_finance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(view_finance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(view_finance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(view_finance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton change;
    private javax.swing.JTable display;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton next;
    private javax.swing.JButton previous;
    private javax.swing.JTextField student_number;
    // End of variables declaration//GEN-END:variables
}
